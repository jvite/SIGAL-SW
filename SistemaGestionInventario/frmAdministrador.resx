<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxImagenPerfil.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACoAAAAoCAYAAACIC2hQAAAABGdBTUEAALGPC/xhBQAAAa5JREFUWEfV
        mS1PxEAURRtCSCDBYDCgUOCQWCwazR+BH4ABgcOjsSAXicShwKAQGBISQoBzZ1tYXrZsP2amMzc5yaZp
        77ubbmfe2xYTOoKT8cckdAqH44+/OoavknOYg6Gk2spQ5VE2pzOoDlZcwDzElmqqts2jjMUBfJQHJrmE
        BYgl1VJNm0PZlNFpH97BnnQFixBaS3ANtr4yKdsf7cEb2JNHsAyhJO8bsHWVRZmmahdewV50CyvgW/KU
        t62nDMryr3bgBezFd7AKviQvedo6qq0MjbQNz2BN7mEN+koe8rL+qqnarbQFT2DNHmADukrXysP6qtYm
        dJJMH8GXaagv77QOPm5T6J+TU98ffqwH1KnrUhJ7yXNquzjXbSLyCLmJODXd7uq2ZV0rjyia1UCk0ug4
        1bVknyX2+FCto5NtcusYuhn/kcaGaQFFSuNN+kGzuPVZPExZLE99F/woc5ivLTToHJZFU5JFm+drvgna
        OPueb4KMIiGHO29zWOj5xsscFmu+6fWAxp5vOi15Q803rTaRoeebRttyKvPNrEYnn7/GpSxeNlRK+PVN
        UXwDjnevnJkWzSMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pbxImagenPerfil.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAohJREFUWEfF
        mL2KFEEURgfFQNRII1FQzHQzRUXERExNBA0E80URX0B9Al9AEQVzIxEDH0Az/2FzjYxcYQPx75xllGtN
        ddvTVd39wYGhu+733e2qrprZWaH2wVV4CmvwdY6fveY9x4yuvXAPvsOv/+AYx1ozis7DOuSaacMaawfV
        dfgJuQa68AP0GET+9bnm3sENOAw75/jZa95Lx9tk9Sfp+kmn9Rtcgy3QpK3gGMfGWr2qrkkXeQww8Cx0
        lWPTJvWsIreJ9G31qSwra6KHnlW2IPeyaOy6apvWJjnd6ZrUu1huuNHUxd9X1kYvvYvlqRBNfUP7ytro
        pXexPLqiqdtIX1kbvfQu1heIpiUN7oLopXex3kI0LZniIxC99C7WE4imNV8SvYu1CtG07zZjTbrN6F2s
        3ZCeAjU2aj31rqIHkJqXHnV6VtMe+AwxwECfStt0e88xaXN66VlVF8CvSjFIXFcu/mW+buk1iK5Arsmu
        WKvHYDoKHyAX3gVr9aiuE/AccqF90EvPYm2HO1AyrU3oqbcZvbQf3kPOXD7BQ7gMPo2DsGOOn73mPcc4
        NuchZpi1lFbgI+QMn8FpWFbWWJvzNMvMTjoA6Z4nr+E4lEoPvVJ/M81uldPzCtJip6n3WslILz3THLPt
        oVH3IS26CUPpFqR59pCVizr9YV71vGxQes7bQ3YLeglx4AvYBkPLDLNitr38ozMQB8hJGEtmpfn29FeP
        IN58DGPLzNiDPW3KHzIbEG8eg7FlZuzBnuxtdm5+4Q/u+lMpPXHsbXY7XJC7MJXMjr3Y28K/Ni7CVLoE
        sZfNf428CRfkFEwls2Mv9rbwpeAQTCWzYy/2tvAGt56FA8vs0Mts4zfm1rKmZPAdnwAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>